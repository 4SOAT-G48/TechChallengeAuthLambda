{
  "service": {
    "service": "auth-lambda",
    "serviceObject": {
      "name": "auth-lambda"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "timeout": 20,
      "environment": {
        "USER_POOL": {
          "Ref": "UserPool"
        },
        "USER_POOL_CLIENT": {
          "Ref": "UserClient"
        }
      },
      "httpApi": {
        "cors": true,
        "authorizers": {
          "userAuthoriser": {
            "identitySource": "$request.header.Authorization",
            "issuerUrl": "https://cognito-idp.us-east-1.amazonaws.com/${USER_POOL}",
            "audience": "${USER_POOL_CLIENT}"
          }
        }
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "cognito-idp:AdminInitiateAuth",
                "cognito-idp:AdminCreateUser",
                "cognito-idp:AdminSetUserPassword"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "RegisterLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/auth-lambda-dev-register"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/auth-lambda-dev-login"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "auth-lambda",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-lambda-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-lambda-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "auth-lambda",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "RegisterLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/auth-lambda/dev/1710794248610-2024-03-18T20:37:28.610Z/auth-lambda.zip"
              },
              "Handler": "src/functions/register.register",
              "Runtime": "nodejs20.x",
              "FunctionName": "auth-lambda-dev-register",
              "MemorySize": 1024,
              "Timeout": 20,
              "Environment": {
                "Variables": {
                  "USER_POOL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL\"]"
                  },
                  "USER_POOL_CLIENT": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL_CLIENT\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RegisterLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/auth-lambda/dev/1710794248610-2024-03-18T20:37:28.610Z/auth-lambda.zip"
              },
              "Handler": "src/functions/login.login",
              "Runtime": "nodejs20.x",
              "FunctionName": "auth-lambda-dev-login",
              "MemorySize": 1024,
              "Timeout": 20,
              "Environment": {
                "Variables": {
                  "USER_POOL": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL\"]"
                  },
                  "USER_POOL_CLIENT": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USER_POOL_CLIENT\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "RegisterLambdaVersion8FiySaYLSMtcMm0InTXKQ3ec8lD9NN16URZKyBCuLw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RegisterLambdaFunction"
              },
              "CodeSha256": "X9AtcU3zaBtjPBEbL7fKWDjzaIg9Eva9YyT7mqIR9qg="
            }
          },
          "LoginLambdaVersionvGLhLPptP1MXZRnDfCBlqOBPV1q72epbERKFEDsjQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "X9AtcU3zaBtjPBEbL7fKWDjzaIg9Eva9YyT7mqIR9qg="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-auth-lambda",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "AllowMethods": [
                  "OPTIONS",
                  "POST"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "HttpApiAuthorizerUserAuthoriser": {
            "Type": "AWS::ApiGatewayV2::Authorizer",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "Name": "userAuthoriser",
              "IdentitySource": [
                "$request.header.Authorization"
              ],
              "AuthorizerType": "JWT",
              "JwtConfiguration": {
                "Audience": [
                  "${USER_POOL_CLIENT}"
                ],
                "Issuer": "https://cognito-idp.us-east-1.amazonaws.com/${USER_POOL}"
              }
            }
          },
          "RegisterLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RegisterLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRegister": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RegisterLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostRegister": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /register",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRegister"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRegister"
          },
          "LoginLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationLogin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"LoginLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostLogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationLogin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationLogin"
          },
          "UserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "auth-lambda-pool-${sls.stage}",
              "Schema": [
                {
                  "Name": "cpf",
                  "Required": true,
                  "Mutable": true,
                  "AttributeDataType": "String",
                  "StringAttributeConstraints": {
                    "MinLength": "11",
                    "MaxLength": "11"
                  }
                },
                {
                  "Name": "name",
                  "Required": true,
                  "Mutable": true
                },
                {
                  "Name": "email",
                  "Required": false,
                  "Mutable": true
                }
              ],
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 6
                }
              },
              "AutoVerifiedAttributes": []
            }
          },
          "UserClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "auth-lambda-client-${sls.stage}",
              "GenerateSecret": false,
              "UserPoolId": {
                "Ref": "UserPool"
              },
              "AccessTokenValidity": 5,
              "IdTokenValidity": 5,
              "ExplicitAuthFlows": [
                "ADMIN_NO_SRP_AUTH"
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-auth-lambda-dev-ServerlessDeploymentBucketName"
            }
          },
          "RegisterLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RegisterLambdaVersion8FiySaYLSMtcMm0InTXKQ3ec8lD9NN16URZKyBCuLw"
            },
            "Export": {
              "Name": "sls-auth-lambda-dev-RegisterLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionvGLhLPptP1MXZRnDfCBlqOBPV1q72epbERKFEDsjQ"
            },
            "Export": {
              "Name": "sls-auth-lambda-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-auth-lambda-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-auth-lambda-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "serverless-offline": {
        "useChildProcesses": true,
        "noAuth": true
      }
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "register": {
        "handler": "src/functions/register.register",
        "events": [
          {
            "httpApi": {
              "path": "/register",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/register"
          }
        ],
        "name": "auth-lambda-dev-register",
        "package": {},
        "memory": 1024,
        "timeout": 20,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "RegisterLambdaVersion8FiySaYLSMtcMm0InTXKQ3ec8lD9NN16URZKyBCuLw"
      },
      "login": {
        "handler": "src/functions/login.login",
        "events": [
          {
            "httpApi": {
              "path": "/login",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/login"
          }
        ],
        "name": "auth-lambda-dev-login",
        "package": {},
        "memory": 1024,
        "timeout": 20,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersionvGLhLPptP1MXZRnDfCBlqOBPV1q72epbERKFEDsjQ"
      }
    },
    "resources": {
      "Resources": {
        "UserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "auth-lambda-pool-${sls.stage}",
            "Schema": [
              {
                "Name": "cpf",
                "Required": true,
                "Mutable": true,
                "AttributeDataType": "String",
                "StringAttributeConstraints": {
                  "MinLength": "11",
                  "MaxLength": "11"
                }
              },
              {
                "Name": "name",
                "Required": true,
                "Mutable": true
              },
              {
                "Name": "email",
                "Required": false,
                "Mutable": true
              }
            ],
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 6
              }
            },
            "AutoVerifiedAttributes": []
          }
        },
        "UserClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "auth-lambda-client-${sls.stage}",
            "GenerateSecret": false,
            "UserPoolId": {
              "Ref": "UserPool"
            },
            "AccessTokenValidity": 5,
            "IdTokenValidity": 5,
            "ExplicitAuthFlows": [
              "ADMIN_NO_SRP_AUTH"
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "auth-lambda",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/mateus/study/TechChallengeAuthLambda/.serverless/auth-lambda.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/auth-lambda/dev/1710794248610-2024-03-18T20:37:28.610Z",
    "artifact": "auth-lambda.zip"
  }
}